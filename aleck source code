# -*- coding: utf-8 -*-
"""Untitled104.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I7ExC6_tgqEsKgi4s_uBeMiHH8R34O7m
"""

import nltk
import numpy as np
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

f=open('language.txt','r',errors = 'ignore')#sample file of the bot
sentence=f.read()
sentence=sentence.lower()# converts to lowercase
nltk.download('punkt') 
nltk.download('wordnet') 
sent_tokens = nltk.sent_tokenize(sentence) 
word_tokens = nltk.word_tokenize(sentence)

import string
lemmer = nltk.stem.WordNetLemmatizer()
def tokenize(tokens):
    return [lemmer.lemmatize(token) for token in tokens]
remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)
def normalize(text):
    return tokenize(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))
INPUTS = ("hello", "hi", "greetings", "sup", "what's up","hey",)
RESPONSES = ["hi", "hey", "*nods*", "hi there", "hello", "I am glad! You are talking to me"]
def greeting(sentence):
     for word in sentence.split():
        if word.lower() in INPUTS:
            return random.choice(RESPONSES)

def response(user_response):
    bot_response=''
    sent_tokens.append(user_response)
    TfidfVec = TfidfVectorizer(tokenizer=normalize, stop_words='english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals = cosine_similarity(tfidf[-1], tfidf)
    idx=vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    req_tfidf = flat[-2]
    if(req_tfidf==0):
        bot_response=robo_response+"I am sorry! I don't understand you"
        return bot_response
    else:
        bot_response = bot_response+sent_tokens[idx]
        return bot_response

flag=True
print("ALECK: My name is Aleck. I will translate your language to the chosen language. If you want to exit, type Bye!")
while(flag==True):
    user_response = input()
    user_response=user_response.lower()
    if(user_response!='bye'):
        if(user_response=='thanks' or user_response=='thank you' ):
            flag=False
            print("ALECK: You are welcome..")
        else:
            if(greeting(user_response)!=None):
                print("ALECK: "+greeting(user_response))
            else:
                print("ALECK: ",end="")
                print(response(user_response))
                sent_tokens.remove(user_response)
    else:
        flag=False
        print("ALECK: Bye! take care..")

